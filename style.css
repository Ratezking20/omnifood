/* ----------------------------------------------------------------------------------------- */
/* BASIC SETUP */
/* ---------------------------------------------------------------------------------------- */
/* When you use "*" it targets all elements to have these attributes */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    background-color: white;
    color: #555;
    font-family: 'Segoe UI', Arial, Verdana, sans-serif;
    font-size: 20px;
    font-weight: 300;
    text-rendering: optimizeLegibility;
}

/* If you add float property to your code, you will need to clear the off set occuring from float using this code and by adding "clearfix" as a class to the ul element that houses the image list */
.clearfix {zoom: 1}
.clearfix:after {
    content: '.';
    clear: both;
    display: block;
    height: 0;
    visibility: hidden;
}

/* --------------------------------------------------------------------------------------- */
/* HEADER */
/* --------------------------------------------------------------------------------------- */
header {
    /* Adding "linear-gradient()" allows you to add gradient over your images */
    background-image: linear-gradient(#00000070, #00000070),url(hero.jpg);
    height: 100vh;
    background-size: cover;
    background-position: center;
}

    /* This code centers the container to the center of page  */
.hero-text-box {
    position:absolute;
    width: 1140px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
/* ------------------------------------------------------------------------------------ */
/* REUSABLE COMPONENTS */
/* ----------------------------------------------------------------------------------- */
.row {
    max-width: 1140px;
    margin: 0 auto 0 auto;
}

section {
    padding: 80px 0 80px 0;
}

h1 {
    margin: 0;
    margin-top: 0;
    margin-bottom: 20px;
    color: #fff;
    font-size: 240%;
    word-spacing: 4px;
}

h2 {
    font-size: 180%;
    text-align: center;
    word-spacing: 2px;
    margin-bottom: 30px;
}

h3 {
    font-size: 110%;
    margin-bottom: 15px;
    font-weight: 300;
    text-transform: uppercase;
}

h1, h2 {
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
}



h2::after {
    display: block;
    height: 2px;
    background-color: rgb(240, 203, 37);
    content: " ";
    width: 100px;
    margin: 0 auto;
    margin-top: 30px;
}


.box {
    padding: 0 1% 0 1%;
}

/* ----------------------------------------------- */
/* HOW-IT-WORKS SECTION */
/* ----------------------------------------------- */

.steps-box {
    margin-top: 30px ;

}

.steps-section {
    background-color: rgb(230, 230, 230);
}

/* Using the ":first-child" selector allows you to target the first child element independent of the other children elements in the same class */
.steps-box:first-child {
    text-align: right;
    padding-right: 3%;
    margin-top: 30px;
}

/* Using the ":last-child" selector allows you to target the last child element independent of the other children elements in the same class */
.steps-box:last-child {
    padding-left: 3%;
    margin-top: 70px;
}

.app-screen {
    width: 45%;
}

.work-steps {
    margin-bottom: 50px;
    
}

.work-steps:last-of-type {
    margin-bottom: 80px;
}

.work-steps p {
    padding-left: 15px;
}

/* Here, you're targeting "<div>1</div>" in the html. You need to put a circle around the "1" by using this code*/
.work-steps div {
    color: rgb(240, 203, 37) ;
    border: 2px solid rgb(240, 203, 37);
    display: inline-block;   
    border-radius: 50%;
    
    height: 55px;
    width: 55px;
    text-align: center;
    padding: 5px;
    font-size: 150%;
    margin-left: 25px;
}

.btn-app img {
    height: 50px;
    width: auto;
    margin-right: 10px;

}

/* ----------------------------------------------- */
/* MEALS SECTION */
/* ----------------------------------------------- */


.meals-showcase {
    list-style: none;
    width: 100%;
}

.meals-showcase li {
    display: block;
    float: left;
    width: 25%;
}

.meal-photo {
    width: 100%;
    margin: 0;
    overflow: hidden;
    /* This makes the image darker, after lowering the opacity of the image */
    background-color: black;
}

.meal-photo img {
    /* Lowering the opacity of the image allows you to add a dark background to the image so that the animation of hovering over an image can be clearly seen */
    opacity: 0.7;
    width: 100%;
    height: auto;
    /* Using this scale property scales the image bigger by 115% */
    transform: scale(1.15);
    transition: transform 0.5s, opacity 0.5s;

}

.meals-section {
    padding: 0;
}

.meal-photo img:hover {
    /* This adds an effect so when a user hovers over an image it will zoom to its original size */
    transform: scale(1.03);
    /* This brings the opacity back to 100% when a user hovers over an image */
    opacity: 1;

}

/* ----------------------------------------------- */
/* PARAGRAPHS */
/* ----------------------------------------------- */
.long-copy {
    line-height: 145%;
    width: 70%;
    margin-left: 15%;
}

/* This grabs/targets all paragraphs located inside of a .box class element */
.box p {
    font-size: 90%;
    line-height: 145%;
    }

    
/* --------------------------------------------------------------------- */
/* ICONS */
/* ------------------------------------------------------------------------- */
.icon-big {
    font-size: 55%;
    display: block;
    color: rgb(240, 203, 37);
    
}

/* ----------------------------------------------------------------------------------------------------------- */
/* BUTTONS */
/* ----------------------------------------------------------------------------------------------------------- */


.btn:link, 
/* When you use the ".btn" class it targets all elements with class="btn" regardless if you have addition identity such as class="btn btn-full" to differentiate between buttons. */
/* adding a pseudo class such as ":link :visited :hover :active" allows you to show the different states of what the button will look or behave before, while or after clicking the button */
.btn:visited {
    display: inline-block;
    padding: 10px 30px;
    font-weight: 300;
    /* To get rid of the underline line under the "a link" or anchor link use "text-decoration: none" */
    text-decoration: none;
    border-radius: 200px;
    color: white;
    transition: background-color 0.2s, border 0.2s, color 0.2s;
}

.btn:hover,
.btn:active {
    background-color: #a38800;
}

.btn-full:link,
.btn-full:visited {
    background-color: rgb(240, 203, 37);
    border: 1px solid rgb(240, 203, 37);
    color: #fff;
    margin-right: 15px;
}

.btn-ghost:link,
.btn-ghost:visited {
    /* Add color directly to the border instead of writing additional code */
    border: 1px solid rgb(240, 203, 37);
    color: rgb(240, 203, 37);;
}

.btn-full:hover,
.btn-full:active {
    border: 1px solid #a38800 ;
}

.btn-ghost:hover
.btn-ghost:active {
    border: 1px solid #a38800;
    color: #fff;
}

.logo {
    height: 100px;
    width: auto;
    float: left;
    margin-top: 20px;
}

.main-nav {
    float: right;
    /* If you want to get rid of the bullet points inside a <ul> element use "list-style: none;"  */
    list-style: none;
    margin-top: 55px;
}

.main-nav li {
    display: inline-block;
    margin-left: 40px;
}

.main-nav li a:link,
.main-nav li a:visited {
    padding-inline-start: 8px 0 8px 0;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    font-size: 90%;
    border-bottom: 2px solid transparent;
    transition: border-bottom 0.2s;
}

.main-nav li a:hover,
.main-nav li a:active {
    border-bottom: 2px solid rgb(240, 203, 37);
}

/* ----------------------------------------------- */
/* CITIES SECTION */
/* ----------------------------------------------- */

.city-features {

    margin: 0;
    height: 50px;
    width: fit-content;
}

.small-icon svg {
   height: 30px;
   width: 30px;
}

.city-features p {
    float: right;
    padding-left: 15px;
    
}